#!/bin/bash

# Check if $BIT_CLOUD_ACCESS_TOKEN is set
if [[ -z "$BIT_CONFIG_USER_TOKEN" && -z "$BIT_CLOUD_ACCESS_TOKEN" ]]; then
    echo "Error: BIT_CLOUD_ACCESS_TOKEN environment variable is not set. It is required!"
    exit 1
fi

# Assign BIT_CLOUD_ACCESS_TOKEN to BIT_CONFIG_USER_TOKEN
if [[ -z "$BIT_CONFIG_USER_TOKEN" ]]; then
    BIT_CONFIG_USER_TOKEN="$BIT_CLOUD_ACCESS_TOKEN"
    export BIT_CONFIG_USER_TOKEN
fi

# Ensure GitHub token is set
if [[ -z "$GITHUB_TOKEN" ]]; then
    echo "Error: GITHUB_TOKEN environment variable is required."
    exit 1
fi

commit_sha=$(git rev-parse HEAD)

response=$(curl --silent \
                --header "Authorization: token $GITHUB_TOKEN" \
                "https://api.github.com/repos/${GITHUB_REPOSITORY}/commits/$commit_sha/pulls")

if [[ $? -ne 0 ]]; then
    echo "Error: Failed to fetch data from GitHub API for commit: $commit_sha."
    exit 1
fi

if echo "$response" | jq '. | type' | grep -q "array" && [[ "$(echo "$response" | jq 'length')" -gt 0 ]]; then
    PR_TITLE=$(echo "$response" | jq -r '.[0].title')
    PR_LABELS=$(echo "$response" | jq -r '.[0].labels[].name')
else
    PR_TITLE=""
    PR_LABELS=""
fi

keywords=("patch" "major" "minor" "pre-release")
version="Unknown"

for label in $PR_LABELS; do
    if [[ " ${keywords[*]} " == *"$label"* ]]; then
        version="$label"
        break
    fi
done

if [[ "$version" == "Unknown" ]]; then
    for keyword in "${keywords[@]}"; do
        if [[ "$PR_TITLE" == *"[${keyword}]"* ]]; then
            version="$keyword"
            break
        fi
    done
fi

if [[ "$version" == "Unknown" ]]; then
    COMMIT_MESSAGE=$(git log -1 --pretty=%B)
    for keyword in "${keywords[@]}"; do
        if [[ "$COMMIT_MESSAGE" == *"[${keyword}]"* ]]; then
            version="$keyword"
            break
        fi
    done
fi

echo "Determined Version: $version"

command="bit tag -m 'CI' --build"

if [[ "$version" != "Unknown" ]]; then
    command+=" --$version"
fi

if [[ " $@ " == *"--persist"* ]]; then
    command+=" --persist"
fi

echo "Executing: $command"
$command
bit export
