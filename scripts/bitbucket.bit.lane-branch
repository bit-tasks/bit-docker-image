#!/bin/bash

# Load variables from ws.env file
source /tmp/ws.env

# Check if $BIT_CONFIG_ACCESS_TOKEN is set
if [[ -z "$BIT_CONFIG_USER_TOKEN" && -z "$BIT_CONFIG_ACCESS_TOKEN" ]]; then
    echo "Error: BIT_CONFIG_ACCESS_TOKEN environment variable is not set. It is required!"
    exit 1
fi

# Assign BIT_CONFIG_ACCESS_TOKEN to BIT_CONFIG_USER_TOKEN if not set
if [[ -z "$BIT_CONFIG_USER_TOKEN" ]]; then
    BIT_CONFIG_USER_TOKEN="$BIT_CONFIG_ACCESS_TOKEN"
    export BIT_CONFIG_USER_TOKEN
fi

# Check if GIT_USER_NAME and GIT_USER_EMAIL are set
if [[ -z "$GIT_USER_NAME" || -z "$GIT_USER_EMAIL" ]]; then
    echo "Error: Both GIT_USER_NAME and GIT_USER_EMAIL must be set in environment variables."
    exit 1
fi

# Parse arguments
LANE_NAME=""
BRANCH_NAME=""

while [[ $# -gt 0 ]]; do
  case $1 in
    --lane-name)
      LANE_NAME="$2"
      shift 2
      ;;
    --branch-name)
      BRANCH_NAME="$2"
      shift 2
      ;;
    *)
      echo "Unknown option: $1"
      exit 1
      ;;
  esac
done

# Check if LANE_NAME is set
if [ -z "$LANE_NAME" ]; then
  echo "Error: Please set the --lane-name argument"
  exit 1
fi

# If BRANCH_NAME is not set, assign it the value of LANE_NAME
if [ -z "$BRANCH_NAME" ]; then
  BRANCH_NAME="$LANE_NAME"
fi

# Bit commands
bit import -x
bit lane import "$LANE_NAME"
bit init --reset-lane-new

# Set git configuration
git config --global --add safe.directory /opt/atlassian/pipelines/agent/build
git config --global user.name "${GIT_USER_NAME}"
git config --global user.email "${GIT_USER_EMAIL}"

# Git operations
git checkout -b "$BRANCH_NAME"
git add .
git commit -m "Committing the latest updates from lane: ${LANE_NAME} to the Git branch (automated) [skip-ci]"
git push origin "$BRANCH_NAME" -f
